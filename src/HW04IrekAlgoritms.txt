/* HomeWork 04
* @author Irek Nabiullin
* @version dated Sept 07, 2018
* @link on my github:
* https://github.com/IrekNabiullin
*
* Sorry. Prishlos vospolzovatsa metodichkoy.
*/

class​ ​Link{
	​public​ ​String​ name; 
    ​public​ ​int​ age;
	​public​ ​Link​ ​next; 
	​public​ ​Link​(​String​ name​,​ ​int​ age​){
		​this​.​name ​=​ name;
		​this​.​age ​=​ age;
		} 
		​public​ ​void​ display​(){ 
        ​System​.​out​.​println​(​"Name: "​+​this​.​name​+​", age: "​+​this​.​age​);
		}
	}
class​ ​LinkedList{
	​public​ ​Link​ first; 
    ​public​ ​Link​ ​last;
	​public​ ​LinkedList​(){
		first ​=​ ​null; 
        ​last​ ​=​ ​null; 
		} 
public​ ​boolean​ isEmpty​(){
		​return​ ​(​first ​==​ ​null​);
		}
		
​public​ ​void​ insert​(​String​ name​,​ ​int​ age​){
		​Link​ newLink ​=​ ​new​ ​Link​(​name​,​ age​);
		
  ​if​ ​(​this​.​isEmpty​())
  ​last​ ​=​ newLink;
  newLink​.​next​ ​=​ first;
  first ​=​ newLink; 
  }   
​public​ ​void​ insertLast​(​String​ name​,​ ​int​ age​){
	  ​Link​ newLink ​=​ ​new​ ​Link​(​name​,​ age​); 
	  ​if​ ​(​this​.​isEmpty​()){ 
	  first ​=​ newLink; 
	  ​}​ ​else​ { 
	  ​last​.​next​ ​=​ newLink; 
	  } ​last​ ​=​ newLink; 
	} 
​public​ ​Link​ ​delete​(){ 
   ​Link​ temp ​=​ first; 
   ​if​ ​(​first​.​next​ ​==​ ​null) 
   ​last​ ​=​ ​null;
   first ​=​ first​.​next;
   ​return​ temp; 
     } 
​public​ ​void​ display​(){
    ​Link​ current ​=​ first​; 
	​while​(​current ​!=​ ​null​){
		current​.​display​();
		current ​=​ current​.​next​;
		​}
		}
​public​ ​Link​ find​(​String​ name​){
	​Link​ current ​=​ first​;
	​while​(​current​.​name ​!=​ name​){
		​if​(​current​.​next​ ​==​ ​null​) 
		​return​ ​null​;    
		​else     
			current ​=​ current​.​next​;
		​} 
		​return​ current​; 
		​}   
		​public​ ​Link​ ​delete​(​String​ name​){ 
		​Link​ current ​=​ first​;   
		​Link​ previous ​=​ first​;  
        ​while​(​current​.​name ​!=​ name​){ 
		​if​(​current​.​next​ ​==​ ​null)  
		​return​ ​null​;  
		​else{      
		previous ​=​ current​; 
		current ​=​ current​.​next​; 
		​}
	​}    
	​if​(​current ​==​ first​) 
	first ​=​ first​.​next​; 
	​else  
		previous​.​next​ ​=​ current​.​next​; 
	​return​ current;
	} 
} 
 
 
public​ ​class​ ​ListApp​ { 
       ​public​ ​static​ ​void​ main​(​String​[]​ args​)​ {
		   ​LinkedList​ list ​=​ ​new​ ​LinkedList​();
		   list​.​insert​(​"Barsik"​,​ ​5​);
		   list​.​insert​(​"Murzik"​,​ ​7);
		   list​.​insert​(​"Kissik"​,​ ​4​);
		   list​.​insertLast​(​"Pushik"​,​ ​8​);
           list​.​display​(); 
		   ​System​.​out​.​println​(​"Delete item from list"​); 
		   list​.​delete​(​"Murzik"​);
		   list​.​display​();
		   } 
		} 
	